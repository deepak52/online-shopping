{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dsabu001/Desktop/my-s5-project/Shopping-Cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllProducts_Saga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(placeOrder_Sage),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(listAllOrders_saga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchProducts);\n\nimport { put, takeLatest, all } from 'redux-saga/effects';\nimport { listProducts, placeOrder, listOrders } from '../api/product.api';\nimport { LIST_ALL_PRODUCTS, PLACE_ORDER, LIST_ALL_ORDERS } from '../actions/action-types/cart-actions';\n\nfunction getAllProducts_Saga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllProducts_Saga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return listProducts();\n\n        case 3:\n          response = _context.sent;\n          console.log(response);\n\n          if (!(response.status === 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return put({\n            type: '@product/saga/list_products',\n            payload: {\n              status: \"success loading products\",\n              data: response.data.products\n            }\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: '@user/saga_action/message',\n            payload: {\n              status: \"error\",\n              text: 'Error loading the products'\n            }\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction placeOrder_Sage(data) {\n  var response;\n  return _regeneratorRuntime.wrap(function placeOrder_Sage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return placeOrder(data);\n\n        case 3:\n          response = _context2.sent;\n          console.log(response);\n\n          if (!(response.status === 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 8;\n          return put({\n            type: '@product/saga/place_order',\n            payload: {\n              status: \"success loading products\",\n              data: response.data.products\n            }\n          });\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put({\n            type: '@user/saga_action/message',\n            payload: {\n              status: \"error\",\n              text: 'Error loading the products'\n            }\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction listAllOrders_saga() {\n  var response;\n  return _regeneratorRuntime.wrap(function listAllOrders_saga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return listOrders();\n\n        case 3:\n          response = _context3.sent;\n          console.log(response);\n\n          if (!(response.status === 200)) {\n            _context3.next = 8;\n            break;\n          }\n\n          _context3.next = 8;\n          return put({\n            type: '@product/saga/list_all_order',\n            payload: {\n              status: \"success loading orders\",\n              data: response.data\n            }\n          });\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put({\n            type: '@user/saga_action/message',\n            payload: {\n              status: \"error\",\n              text: 'Error loading the orders'\n            }\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\n\nexport default function watchProducts() {\n  return _regeneratorRuntime.wrap(function watchProducts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeLatest(LIST_ALL_PRODUCTS, getAllProducts_Saga), takeLatest(PLACE_ORDER, placeOrder_Sage), takeLatest(LIST_ALL_ORDERS, listAllOrders_saga)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/Users/dsabu001/Desktop/my-s5-project/Shopping-Cart/src/sagas/product.saga.js"],"names":["getAllProducts_Saga","placeOrder_Sage","listAllOrders_saga","watchProducts","put","takeLatest","all","listProducts","placeOrder","listOrders","LIST_ALL_PRODUCTS","PLACE_ORDER","LIST_ALL_ORDERS","response","console","log","status","type","payload","data","products","text"],"mappings":"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","sourcesContent":["import { put, takeLatest, all } from 'redux-saga/effects';\nimport { listProducts, placeOrder, listOrders } from '../api/product.api';\nimport { LIST_ALL_PRODUCTS, PLACE_ORDER, LIST_ALL_ORDERS } from '../actions/action-types/cart-actions'\n\n\nfunction* getAllProducts_Saga() {\n    try {\n        let response = yield listProducts();\n        console.log(response);\n        if (response.status === 200) {\n            \n                yield put({\n                    type: '@product/saga/list_products',\n                    payload: { status: \"success loading products\", data: response.data.products }\n                });\n            \n\n        } \n    } catch (e) {\n        yield put({\n            type: '@user/saga_action/message',\n            payload: { status: \"error\", text: 'Error loading the products' }\n        });\n    }\n}\n\nfunction* placeOrder_Sage(data) {\n    try {\n        let response = yield placeOrder(data);\n        console.log(response);\n        if (response.status === 200) {\n            \n                yield put({\n                    type: '@product/saga/place_order',\n                    payload: { status: \"success loading products\", data: response.data.products }\n                });\n            \n\n        } \n    } catch (e) {\n        yield put({\n            type: '@user/saga_action/message',\n            payload: { status: \"error\", text: 'Error loading the products' }\n        });\n    }\n}\n\nfunction* listAllOrders_saga() {\n    \n    try {\n        let response = yield listOrders();\n        console.log(response);\n        if (response.status === 200) {\n            \n                yield put({\n                    type: '@product/saga/list_all_order',\n                    payload: { status: \"success loading orders\", data: response.data }\n                });\n            \n\n        } \n    } catch (e) {\n        yield put({\n            type: '@user/saga_action/message',\n            payload: { status: \"error\", text: 'Error loading the orders' }\n        });\n    }\n}\n\n\n\n\nexport default function* watchProducts() {\n    yield all([\n        takeLatest(LIST_ALL_PRODUCTS, getAllProducts_Saga),\n        takeLatest(PLACE_ORDER, placeOrder_Sage),\n        takeLatest(LIST_ALL_ORDERS, listAllOrders_saga,)\n\n    ])\n} "]},"metadata":{},"sourceType":"module"}